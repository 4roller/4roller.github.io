<!doctype html>
<html lang="en">
	<head>
		<meta charset="uft-8">
		<title>Backbone demo</title>
		<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.1.1/css/bootstrap.min.css"></link>
	</head>
	<body>
		<div class="container">
			<h1>Test App</h1>
			<hr/>
			<div class="page">
			</div>
		</div>

		<script type="text/template" id='user-list-template'>
			<a href="#/new" class="btn btn-primary">New</a>
			<hr/>
			<table class="table striped">
				<thead>
					<tr>
						<th>Title</th>
						<th>Id</th>
						<th>Poster</th>
						<th><th>
					</tr>
				</thead>
				<tbody>
					<% _.each( movies, function(movie) { %>

						<tr>
							<td><%= movie.get('Name') %></td>
							<td><%= movie.get('Spaceid') %></td>
							<td><%= movie.get('Poster') %></td>
							<td><a href="#/edit/<%= movie.get('Spaceid') %>" class="btn">Edit</a></td>
						<tr>
					<% }) %>
				</tbody>
			</table>
		</script>

		<script type="text/template" id='new-template'>
			<form class="new-form">
				<legend><%= movie ? 'Update' : 'Create' %> Form</legend>
				<label>Field One</label>
				<input type='text' name="fieldOne" value="<%= movie ? movie.get('fieldOne') : '' %>"></input>
				<label>Field Two</label>
				<input type='text' name="fieldTwo" value="<%= movie ? movie.get('fieldTwo') : '' %>"></input>
				<hr/>
				<button type="submit" class="btn">Create</button>
			</form>
		</script>
 

		<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/1.9.1/jquery.min.js "></script>
		<script src="//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.4.4/underscore-min.js "></script>
		<script src="//cdnjs.cloudflare.com/ajax/libs/backbone.js/0.9.10/backbone-min.js "></script>
		<script>

			// Snippets

			$.ajaxPrefilter( function( options, originalOptions, jqXHR) {
				options.url = 'http://solid.it.cx/spademo/' + options.url;
			});

			$.fn.serializeObject = function() {
			   var o = {};
			   var a = this.serializeArray();
			   $.each(a, function() {
			       if (o[this.name]) {
			           if (!o[this.name].push) {
			               o[this.name] = [o[this.name]];
			           }
			           o[this.name].push(this.value || '');
			       } else {
			           o[this.name] = this.value || '';
			       }
			   });
			   return o;
			};





			// Collection 
			var Movies = Backbone.Collection.extend({
				url: '/movieList.json'
			});

			// Model
			var Movie = Backbone.Model.extend({
				urlRoot: 'query.php'
			});

			// View
			var MoviesList = Backbone.View.extend({
				el: '.page',
				render: function () {
					var that = this;
					var movies = new Movies();
					movies.fetch({
						success: function(movies) {
 							var template = _.template( $('#user-list-template').html(), {movies: movies.models })
							that.$el.html(template);
						}
					});
					
				}
			});

			var NewView = Backbone.View.extend({
				el: '.page',
				render: function(options) {
					if(options.id) { // GET 
						var that = this;
						var movie = new Movie ({id:options.id});
						movie.fetch({
							success: function(user) {
								var template = _.template( $('#new-template').html(), { movie: movie})
								that.$el.html(template);
							}
						}); 
					} else {
						var template = _.template( $('#new-template').html(), { movie: null})
						this.$el.html(template);
					}
				},
				events: {
					'submit .new-form' : 'saveNew', 
				},
				saveNew: function (e) {
					var newDetails =  $(e.currentTarget).serializeObject();
					var details = new Movie();
					details.save(newDetails, {
						success: function () {
							router.navigate('', {trigger: true});  
						}
					});
					return false;
				} 

			});


			// Router
			var Router = Backbone.Router.extend({
				routes: {
					'': 'home',
					'new': 'newView',
					'edit/:id': 'newView'
				}
			});

			var movieslist = new MoviesList();
			var newView = new NewView();
			


			var router = new Router();
			router.on('route:home', function () {
				movieslist.render();
			});
			router.on('route:newView', function (id) {
				newView.render({id: id });
			});

			Backbone.history.start();
		</script>
	</body>

</html>